name: run-hbbtv-test-vectors

on:
  push:
    branches:
      - 'development'
      - 'parallelize'

env:
  TESTS_URL: https://conformance.dashif.org/static/hbbtv-test-suite-mpds-for-motionspell.zip.gpg
  TESTS_FILENAME_GPG: hbbtv-test-suite-mpds-for-motionspell.zip.gpg
  TESTS_FILENAME: hbbtv-test-suite-mpds-for-motionspell.zip
  RESULT_DIR: /var/www/html/jccp-dashboard/production-data/hbbtv/

jobs:
  get-result:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: cli-results
    - name: create joined result
      id: mangle
      run: |
        export JCCP_RUN_ID=$(uuidgen)
        export JCCP_RUN_TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
        export JCCP_RUN_FILENAME=$(date +"%Y%m%d%H%M%S%3N").json
        cat > "$JCCP_RUN_FILENAME" << EOF                         
        {
          "id": "$JCCP_RUN_ID",
          "timestamp": "$JCCP_RUN_TIMESTAMP",
          "source": "HBBTV",
          "type": "hbbtv",
          "results": [
        EOF
        ls -1 http*|head -n1|xargs cat >> "$JCCP_RUN_FILENAME"
        for i in $(ls -1 http*|tail -n+2)
        do
          echo , >> "$JCCP_RUN_FILENAME"
          cat $i >> "$JCCP_RUN_FILENAME"
        done
        echo "]}" >> "$JCCP_RUN_FILENAME"
        cat "$JCCP_RUN_FILENAME"
        echo "::set-output name=result-file::$JCCP_RUN_FILENAME"
    - name: scp results to dashboard
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        source: ${{ steps.mangle.outputs.result-file }}
        target: ${{ env.RESULT_DIR }}
    - name: add results to index
      uses: fifsky/ssh-action@v0.0.6
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        command: |
          cd ${{ env.RESULT_DIR }}
          echo ${{ steps.mangle.outputs.result-file }} >> index
